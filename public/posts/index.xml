<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jonas Lieb</title>
    <link>https://jonaslieb.de/posts/</link>
    <description>Recent content on Jonas Lieb</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sun, 07 Apr 2024 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://jonaslieb.de/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The State of Reverse Engineering Arduino Binaries with Ghidra</title>
      <link>https://jonaslieb.de/posts/arduino-ghidra-intro/</link>
      <pubDate>Sun, 07 Apr 2024 00:00:00 +0000</pubDate>
      <guid>https://jonaslieb.de/posts/arduino-ghidra-intro/</guid>
      <description>&lt;p&gt;Literature about reverse engineering Arduino binaries using&#xA;&lt;a href=&#34;https://ghidra-sre.org/&#34;  class=&#34;external-link&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;Ghidra&lt;/a&gt; appears to be sparse. Therefore, with this&#xA;post, I want to give a short introduction to the architecture and provide a&#xA;starting point for analysis. However, since Ghidra only rudimentary supports the&#xA;ATmega328P (used by the Arduino Uno), the post will also outline the state of&#xA;the current (April 2024) support for this architecture and demonstrate its&#xA;limits.&lt;/p&gt;&#xA;&lt;p&gt;&lt;em&gt;Disclaimer: At daytime, I work in offensive IT security, which requires some&#xA;level of reverse engineering, however mostly of high-level binaries (Linux and&#xA;Windows). I also have some experience with microcontrollers, but I am by no means&#xA;a well-versed embedded systems (reverse) engineer.&lt;/em&gt;&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
